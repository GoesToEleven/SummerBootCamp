
f, err := os.Open(“filename”)
if err != nil {
  die
}
defer f.Close()

bs, err := ioutil.ReadAll(f) // bs []byte

f.Seek(0, 0)

scanner := bufio.NewScanner(f)

for scanner.Scan() {
	line := scanner.Text()
}

dst, err := os.Create(“filename”)
if err != nil {
  die
}
defer dst.Close()

dst.Write(bs)

io.Copy(dst, f)


/////////// CSV ///////////


// f is a file
rdr := csv.NewReader(f)
rdr.Comma = “\t”

rdr.Read() // []string, error

rdr.ReadAll() // [][]string, error

“lastname, firstname”


/////////// REF SPEC ///////////


http://golang.org/ref/spec
\a   U+0007 alert or bell
\b   U+0008 backspace
\f   U+000C form feed
\n   U+000A line feed or newline
\r   U+000D carriage return
\t   U+0009 horizontal tab
\v   U+000b vertical tab
\\   U+005c backslash
\'   U+0027 single quote  (valid escape only within rune literals)
\"   U+0022 double quote  (valid escape only within string literals)

